### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AnnotationTag {
  id: String!
  name: String!
}

input AnnotationTagCreateManyWithoutImageInput {
  connect: [AnnotationTagWhereUniqueInput!]
  connectOrCreate: [AnnotationTagCreateOrConnectWithoutImageInput!]
  create: [AnnotationTagCreateWithoutImageInput!]
}

input AnnotationTagCreateOrConnectWithoutImageInput {
  create: AnnotationTagCreateWithoutImageInput!
  where: AnnotationTagWhereUniqueInput!
}

input AnnotationTagCreateWithoutImageInput {
  id: String
  name: String!
}

input AnnotationTagWhereUniqueInput {
  id: String
  name: String
}

type Image {
  annotationTag(after: AnnotationTagWhereUniqueInput, before: AnnotationTagWhereUniqueInput, first: Int, last: Int): [AnnotationTag!]!
  id: String!
  user(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input ImageCreateOneWithoutUserInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutuserInput
  create: ImageCreateWithoutUserInput
}

input ImageCreateOrConnectWithoutuserInput {
  create: ImageCreateWithoutUserInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateWithoutUserInput {
  annotationTag: AnnotationTagCreateManyWithoutImageInput
  id: String
}

input ImageWhereUniqueInput {
  id: String
}

type Mutation {
  createOneProfile(data: ProfileCreateInput!): Profile!
  createOneUser(data: UserCreateInput!): User!
}

type Profile {
  bio: String!
  id: String!
  user: User!
  userId: String!
}

input ProfileCreateInput {
  bio: String!
  id: String
  user: UserCreateOneWithoutProfileInput!
}

input ProfileCreateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutuserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutuserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  bio: String!
  id: String
}

input ProfileWhereUniqueInput {
  id: String
}

type Query {
  user(where: UserWhereUniqueInput!): User
}

enum Role {
  ADMIN
  USER
}

type User {
  email: String!
  id: String!
  name: String
  role: Role!
}

input UserCreateInput {
  email: String!
  id: String
  Image: ImageCreateOneWithoutUserInput
  name: String
  profile: ProfileCreateOneWithoutUserInput
  role: Role
}

input UserCreateOneWithoutProfileInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutprofileInput
  create: UserCreateWithoutProfileInput
}

input UserCreateOrConnectWithoutprofileInput {
  create: UserCreateWithoutProfileInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutProfileInput {
  email: String!
  id: String
  Image: ImageCreateOneWithoutUserInput
  name: String
  role: Role
}

input UserWhereUniqueInput {
  email: String
  id: String
}
